Index: GestaoBeneficios/src/main/java/com/previdencia/GestaoBeneficios/controllers/BeneficioController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.previdencia.GestaoBeneficios.controllers;\r\n\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.DeleteMapping;\r\nimport org.springframework.web.bind.annotation.PostMapping;\r\nimport org.springframework.web.bind.annotation.PutMapping;\r\nimport org.springframework.web.bind.annotation.RequestBody;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RequestParam;\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.previdencia.GestaoBeneficios.models.Beneficio;\r\nimport com.previdencia.GestaoBeneficios.services.BeneficioService;\r\n\r\n/**\r\n * Controller da classe Beneficios\r\n * @version 1.1\r\n * @since 1.0\r\n * @author Leonardo Fachinello Bonetti\r\n */\r\n@RequestMapping(\"/beneficios\")\r\n@RestController\r\npublic class BeneficioController {\r\n    @Autowired\r\n    private BeneficioService beneficioService;\r\n\r\n    /**\r\n     * Recebe as chamadas POST da API e chama o metodo de adicionar beneficio\r\n     * @param beneficio\r\n     *\r\n     */\r\n    @PostMapping\r\n    public ResponseEntity<String> BeneficioPost(@RequestBody Beneficio beneficio)\r\n    {\r\n        return beneficioService.adicionar(beneficio);\r\n    }\r\n\r\n    /**\r\n     * Recebe as chamadas DELETE da API e chama o metodo de deletar beneficios\r\n     *\r\n     * @param id\r\n     * @return\r\n     */\r\n    @DeleteMapping\r\n    public ResponseEntity<String> BeneficioDelete(@RequestParam Long id) {\r\n        return beneficioService.remover(id);\r\n    }\r\n\r\n    /**\r\n     * Recebe as chamadas PUT da API e chama o metodo de alteracao de beneficios\r\n     *\r\n     * @param id\r\n     * @param beneficio\r\n     * @return\r\n     */\r\n    @PutMapping\r\n    public ResponseEntity<String> BeneficioPut(@RequestParam Long id,\r\n                                               @RequestBody Beneficio beneficio){\r\n        return beneficioService.alterar(id, beneficio);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GestaoBeneficios/src/main/java/com/previdencia/GestaoBeneficios/controllers/BeneficioController.java b/GestaoBeneficios/src/main/java/com/previdencia/GestaoBeneficios/controllers/BeneficioController.java
--- a/GestaoBeneficios/src/main/java/com/previdencia/GestaoBeneficios/controllers/BeneficioController.java	
+++ b/GestaoBeneficios/src/main/java/com/previdencia/GestaoBeneficios/controllers/BeneficioController.java	
@@ -36,17 +36,6 @@
         return beneficioService.adicionar(beneficio);
     }
 
-    /**
-     * Recebe as chamadas DELETE da API e chama o metodo de deletar beneficios
-     *
-     * @param id
-     * @return
-     */
-    @DeleteMapping
-    public ResponseEntity<String> BeneficioDelete(@RequestParam Long id) {
-        return beneficioService.remover(id);
-    }
-
     /**
      * Recebe as chamadas PUT da API e chama o metodo de alteracao de beneficios
      *
